// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using timer_app.Infrastructure;

#nullable disable

namespace timer_app.Migrations
{
    [DbContext(typeof(TimerAppDbContext))]
    [Migration("20240211144015_ConvertUserIdToStringFromInt")]
    partial class ConvertUserIdToStringFromInt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("timer_app.Infrastructure.CalendarEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("CalendarEvents");
                });

            modelBuilder.Entity("timer_app.Infrastructure.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("timer_app.Infrastructure.CalendarEvent", b =>
                {
                    b.HasOne("timer_app.Infrastructure.Project", "Project")
                        .WithMany("CalendarEvents")
                        .HasForeignKey("ProjectId");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("timer_app.Infrastructure.Project", b =>
                {
                    b.OwnsOne("timer_app.Infrastructure.ProjectColor", "ProjectColor", b1 =>
                        {
                            b1.Property<int>("ProjectId")
                                .HasColumnType("integer");

                            b1.Property<string>("Dark")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Darkest")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Light")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Lightest")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ProjectId");

                            b1.ToTable("Projects");

                            b1.WithOwner()
                                .HasForeignKey("ProjectId");
                        });

                    b.Navigation("ProjectColor")
                        .IsRequired();
                });

            modelBuilder.Entity("timer_app.Infrastructure.Project", b =>
                {
                    b.Navigation("CalendarEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
